groups:
- name: capi-release
  jobs:
  - cc-unit-tests
  - bridge-unit-tests
  - create-capi-release
  - deploy-and-test-xena
  - bump-cf-release
  - migration-backwards-compatibility-test
  - ship-it
  - push-github-release
  - bump-capi-release
  - publish-docs
  - bump-cc-api
- name: dependencies-docs
  jobs:
  - check-cc-dependencies
  - rc-docs
  - update-checkman
  - deliver-stories
- name: xena-deployments
  jobs:
  - deploy-xena-datadog-firehose-nozzle
  - deploy-cf-mysql
- name: bosh
  jobs:
  - wait-for-sunday
  - clean-all-the-boshes
  - freshen-wasabi
  - freshen-xena

resource_types:
- name: bosh-release
  type: docker-image
  source:
    repository: cloudfoundry/bosh-release-resource
- name: bosh-stemcell
  type: docker-image
  source:
    repository: cloudfoundry/bosh-stemcell-resource
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:

# schedules
- name: weekly-sunday
  type: time
  source:
    location: America/Los_Angeles
    start: 23:00
    stop: 23:30
    days: [Sunday]

- name: daily
  type: time
  source:
    location: America/Los_Angeles
    start: 23:00
    stop: 23:30

- name: deliver-capi-stories
  type: tracker
  source:
    token: {{deliver_capi_tracker_token}}
    project_id: '966314'
    tracker_url: https://www.pivotaltracker.com

- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: bosh
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh

- name: capi-final-releases
  type: s3
  source:
    bucket: capi-final-releases
    regexp: capi-(.*).tgz
    access_key_id: {{wasabi_s3_access_key}}
    secret_access_key: {{wasabi_s3_secret_key}}

- name: bosh-aws-cpi
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bosh-aws-cpi-release

- name: capi-checkman
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-checkman.git

- name: capi-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/capi-ci.git

- name: capi-ci-private
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git

- name: capi-release-master
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-release.git

- name: capi-release-ci-passed
  type: git
  source:
    branch: ci-passed
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-release.git

- name: capi-release-develop
  type: git
  source:
    branch: develop
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-release.git

- name: capi-release-tarball
  type: s3
  source:
    bucket: cf-capi-releases
    regexp: capi-(.*)-.*-.*.tgz
    access_key_id: {{wasabi_s3_access_key}}
    secret_access_key: {{wasabi_s3_secret_key}}

- name: version
  type: semver
  source:
    access_key_id: {{wasabi_semver_access_key}}
    secret_access_key: {{wasabi_semver_secret_key}}
    initial_version: 0.0.0
    bucket: capi-release-versions
    key: current-capi-release-version
    region_name: us-east-1

- name: cc-api-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git
    branch: master
    file: config/version
    git_user: 'CAPI CI <cf-capi-eng+ci@pivotal.io>'
    private_key: {{private_key}}

- name: cc-uploader
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/cc-uploader.git

- name: cf-release-develop
  type: git
  source:
    branch: develop
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: cf-release-final
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-release

- name: github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: capi-release
    drafts: true
    access_token: {{github_access_token}}

- name: cf-mysql-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-mysql-release.git

- name: cf-release-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-release.git

- name: cf-release-tarball
  type: s3
  source:
    bucket: cf-runtime-releases
    regexp: cf-(\d+)-.*.tgz
    access_key_id: {{wasabi_s3_access_key}}
    secret_access_key: {{wasabi_s3_secret_key}}

- name: cf-wasabi-deployment
  type: bosh-deployment
  source:
    target: 52.0.73.109:25555
    username: {{wasabi_bosh_user}}
    password: {{wasabi_bosh_password}}
    deployment: cf-wasabi
    ignore_ssl: true

- name: cflinuxfs2-rootfs-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release

- name: cloud_controller_ng
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git

- name: cloud_controller_ng-master-migrations
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cloud_controller_ng.git
    paths: ['db']

- name: concourse-config
  type: git
  source:
    paths:
    - wasabi
    ignore_paths:
    - wasabi/deployments/pipeline.yml
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git

- name: datadog-firehose-nozzle-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/datadog-firehose-nozzle-release.git

- name: datadog-firehose-nozzle-release-final
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/datadog-firehose-nozzle-release

- name: diego-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/diego-ci

- name: diego-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/diego-release.git

- name: diego-release-tarball
  type: s3
  source:
    bucket: diego-final-releases
    regexp: diego-(.*).tgz
    access_key_id: {{diego_s3_access_key}}
    secret_access_key: {{diego_s3_secret_key}}

- name: cf-mysql-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-mysql-release

- name: etcd-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/etcd-release

- name: garden-runc-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: nsync
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/nsync.git

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack_failure_hook_url}}

- name: stager
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/stager.git

- name: tps
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/tps.git

- name: xena-acceptance-tests-logs
  type: s3
  source:
    private: true
    bucket: xena-acceptance-tests-logs
    regexp: acceptance_tests.(0)..*.tgz
    access_key_id: {{xena_s3_access_key}}
    secret_access_key: {{xena_s3_secret_key}}

- name: xena-datadog-firehose-nozzle-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: datadog-firehose-nozzle
    ignore_ssl: true

- name: xena-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena
    ignore_ssl: true

- name: xena-mysql-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena-mysql
    ignore_ssl: true

- name: xena-stemcell-upload
  type: bosh-stemcell
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    ignore_ssl: true

- name: xena-release-upload
  type: bosh-release
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    ignore_ssl: true

- name: xena-diego-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena-diego
    ignore_ssl: true

jobs:

- name: check-cc-dependencies
  serial: true
  plan:
  - aggregate:
    - get: cloud_controller_ng
      trigger: true
    - get: concourse-config
    - get: capi-ci
  - task: check-dependencies
    file: capi-ci/ci/scripts/cloud_controller_ng_dependencies.yml
    params:
      GEMNASIUM_API_KEY: {{gemnasium_api_key}}

- name: cc-unit-tests
  plan:
  - aggregate:
    - get: cloud_controller_ng
      trigger: true
    - get: capi-ci
  - aggregate:
    - task: run-cc-unit-tests-mysql
      file: capi-ci/ci/scripts/run_cc_unit_tests.yml
      params:
        DB: mysql
      on_failure:
        put: slack-alert
        params:
          text: '[cc-unit-tests] OH NO! Failed when running with mysql'
          icon_emoji: {{slack_failure_emoji}}
    - task: run-cc-unit-tests-postgres
      file: capi-ci/ci/scripts/run_cc_unit_tests.yml
      params:
        DB: postgres
      on_failure:
        put: slack-alert
        params:
          text: '[cc-unit-tests] OH NO! Failed when running with postgres'
          icon_emoji: {{slack_failure_emoji}}

- name: bump-capi-release
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-develop
      trigger: true
    - get: cloud_controller_ng-master-migrations
      passed: [migration-backwards-compatibility-test]
      trigger: true
    - get: cloud_controller_ng
      passed: [cc-unit-tests]
      trigger: true
    - get: diego-release
      passed: [bridge-unit-tests]
      params:
        submodules:
        - src/code.cloudfoundry.org/bbs
    - get: cc-uploader
      passed: [bridge-unit-tests]
      trigger: true
    - get: nsync
      passed: [bridge-unit-tests]
      trigger: true
    - get: stager
      passed: [bridge-unit-tests]
      trigger: true
    - get: tps
      passed: [bridge-unit-tests]
      trigger: true
  - task: bump-capi-release
    file: capi-ci/ci/scripts/bump_capi_release_conditionally.yml
  - put: capi-release-develop
    params:
      repository: bumped/capi-release
      rebase: true

- name: bridge-unit-tests
  plan:
  - aggregate:
    - get: capi-release
      resource: capi-release-develop
    - get: cc-uploader
      trigger: true
    - get: nsync
      trigger: true
    - get: stager
      trigger: true
    - get: tps
      trigger: true
    - get: capi-ci
    - get: diego-release
      params:
        submodules:
        - src/code.cloudfoundry.org/bbs
  - task: run-bridge-unit-tests
    file: capi-ci/ci/scripts/run_bridge_unit_tests.yml

- name: create-capi-release
  serial_groups: [version]
  serial: true
  plan:
  - aggregate:
    - get: capi-release
      resource: capi-release-develop
      passed: [bump-capi-release]
      trigger: true
    - get: capi-ci
    - get: version
      resource: version
      params:
        pre: rc
    - get: cloud_controller_ng
  - put: version
    params:
      file: version/version
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to update version'
        icon_emoji: {{slack_failure_emoji}}
  - task: create-release-tarball
    file: capi-ci/ci/scripts/create_capi_release.yml
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to create tarball'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-release-tarball
    params:
      file: created-capi-release/capi-*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to upload tarball'
        icon_emoji: {{slack_failure_emoji}}

- name: deploy-cf-mysql
  serial: true
  plan:
  - aggregate:
    - get: weekly-sunday
      trigger: true
    - get: cf-mysql-release
    - get: cf-mysql-release-tarball
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
  - task: make-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/capi
          tag: runtime-ci
      inputs:
      - name: cf-mysql-release
      - name: capi-ci
      - name: capi-ci-private
      outputs:
      - name: generated-manifest
      params:
        ENV: xena
        BOSH_DIRECTOR: https://bosh.xena.cf-app.com:25555
        BOSH_USER: {{xena_bosh_user}}
        BOSH_PASSWORD: {{xena_bosh_password}}
      run:
        path: capi-ci/ci/scripts/create_cf_mysql_deployment_manifest
  - put: xena-mysql-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases:
        - cf-mysql-release-tarball/*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-xena] OH NO! Failed deploying cf-mysql-release to xena'
        icon_emoji: {{slack_failure_emoji}}

- name: deploy-and-test-xena
  serial: true
  serial_groups: [deploy-xena-cf]
  plan:
  - aggregate:
    - get: cf-release-tarball
    - get: capi-release-tarball
      passed: [create-capi-release]
      trigger: true
    - get: capi-release
      resource: capi-release-develop
      passed: [create-capi-release]
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
    - get: cf-release
      resource: cf-release-develop
    - get: diego-ci
    - get: diego-release
      params:
        submodules: none
    - get: garden-runc-release-tarball
    - get: etcd-release-tarball
    - get: diego-release-tarball
      trigger: true
    - get: cflinuxfs2-rootfs-tarball
  - task: manifest
    privileged: true
    file: capi-ci/ci/scripts/create_cf_deployment_manifest.yml
    params:
      INFRASTRUCTURE: aws
      ENVIRONMENT: xena
  - task: generate-deployment-manifests
    file: capi-ci/ci/scripts/create_diego_release_manifest.yml
    params:
      BOSH_TARGET: bosh.xena.cf-app.com
      BOSH_USER: {{xena_bosh_user}}
      BOSH_PASSWORD: {{xena_bosh_password}}
      DEPLOYMENTS_DIR: capi-ci-private
      ENVIRONMENT_NAME: xena
  - aggregate:
    - put: xena-stemcell-upload
      params:
        stemcells:
          - aws-stemcell/*.tgz
    - put: upload-cf-release-tarball
      resource: xena-release-upload
      params:
        releases:
          - cf-release-tarball/*.tgz
    - put: upload-release-tarballs
      resource: xena-release-upload
      params:
        releases:
          - capi-release-tarball/*.tgz
          - diego-release-tarball/*.tgz
          - garden-runc-release-tarball/*.tgz
          - etcd-release-tarball/*.tgz
          - cflinuxfs2-rootfs-tarball/*.tgz
  - put: xena-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases:
        - cf-release-tarball/*.tgz
        - capi-release-tarball/*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-xena] OH NO! Failed deploying cf-release to xena'
        icon_emoji: {{slack_failure_emoji}}
  - put: xena-diego-deployment
    params:
      manifest: generated-diego-manifest/diego-deployment.yml
      releases:
        - diego-release-tarball/*.tgz
        - garden-runc-release-tarball/*.tgz
        - etcd-release-tarball/*.tgz
        - cflinuxfs2-rootfs-tarball/*.tgz
      stemcells: [aws-stemcell/*.tgz]
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-xena] OH NO! Failed deploying diego to xena'
        icon_emoji: {{slack_failure_emoji}}
  - task: enable-feature-flags
    file: capi-ci/ci/scripts/enable_feature_flags.yml
    params:
      CF_API_TARGET: https://api.xena.cf-app.com
      CF_ADMIN_PASSWORD: {{xena_cf_admin_password}}
  - task: acceptance-tests
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-xena
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'run errand acceptance_tests --keep-alive --download-logs --logs-dir bosh-logs'
    ensure:
      put: xena-acceptance-tests-logs
      params:
        file: bosh-logs/acceptance_tests*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-xena] OH NO! Failed on acceptance-tests'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-release-ci-passed
    params:
      repository: capi-release

- name: ship-it
  serial_groups: [version]
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-ci-private
    - get: capi-release
      resource: capi-release-ci-passed
      passed: [deploy-and-test-xena]
    - get: capi-release-tarball
      passed: [deploy-and-test-xena]
    - get: version
      params: {bump: final}
  - put: version
    params: {file: version/version}
  - task: finalize-release
    file: capi-ci/ci/scripts/finalize-release.yml
  - put: capi-final-releases
    params:
      file: finalized-release/capi-*.tgz
  - put: capi-release
    resource: capi-release-master
    params:
      repository: finalized-release/capi-release
      tag: version/version
  - put: version
    params:
      bump: minor
  - task: block
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Way to go, Nick!"]

- name: push-github-release
  serial_groups: [version]
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-master
      passed: [ship-it]
    - get: capi-final-releases
      passed: [ship-it]
      trigger: true
  - task: generate-github-release
    file: capi-ci/ci/scripts/generate_github_release.yml
  - put: github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - generated-release/*.tgz

- name: bump-cf-release
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-master
      trigger: true
      passed: [ship-it]
    - get: cf-release
      resource: cf-release-develop
      params:
        submodules:
        - src/capi-release
  - task: check-can-i-bump
    file: capi-ci/ci/scripts/check_can_i_bump.yml
  - task: bump-cf-release
    file: capi-ci/ci/scripts/bump_cf_release.yml
  - put: cf-release-develop
    params:
      repository: bumped/cf-release
      rebase: true

- name: migration-backwards-compatibility-test
  serial: true
  serial_groups: [deploy-wasabi-migrations]
  plan:
  - aggregate:
    - get: cf-release-final
      params:
        tarball: true
    - get: cf-release
      resource: cf-release-master
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
    - get: cloud_controller_ng
      resource: cloud_controller_ng-master-migrations
      trigger: true
  - task: manifest
    privileged: true
    file: capi-ci/ci/scripts/create_cf_deployment_manifest.yml
    params:
      INFRASTRUCTURE: aws
      ENVIRONMENT: wasabi
  - task: delete-wasabi-deployment
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'delete deployment cf-wasabi'
  - put: cf-wasabi-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases: [ cf-release-final/release.tgz]
  - task: smoke-tests
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'run errand smoke_tests --keep-alive'
  - task: apply-migrations
    privileged: true
    file: capi-ci/ci/scripts/apply_cc_migrations.yml
    params:
      CONNECTION_STRING: {{cc_db_connection_string}}
      ENVIRONMENT: wasabi
      DB_HOST: 10.0.32.30
      TUNNEL_HOST: 52.0.73.109
  - task: acceptance-tests
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'run errand acceptance_tests --keep-alive --download-logs --logs-dir bosh-logs'
    on_success:
      task: cleanup-wasabi-deployment
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_command.yml
      input_mapping: {manifest: generated-manifest}
      params:
        <<: *bosh-target-wasabi
        DEPLOYMENT_YML: manifest/deployment.yml
        COMMAND: 'delete deployment cf-wasabi'

- name: clean-all-the-boshes
  plan:
  - aggregate:
    - get: capi-ci
    - get: daily
      trigger: true
  - aggregate:
    - task: cleanup-wasabi
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-wasabi
        BOSH_DIRECTOR: https://bosh.wasabi.cf-app.com:25555
        BOSH_USER: {{wasabi_bosh_user}}
        BOSH_PASSWORD: {{wasabi_bosh_password}}
    - task: cleanup-xena
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-xena
        BOSH_DIRECTOR: https://bosh.xena.cf-app.com:25555
        BOSH_USER: {{xena_bosh_user}}
        BOSH_PASSWORD: {{xena_bosh_password}}
    - task: cleanup-arya
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-arya
        BOSH_DIRECTOR: https://bosh.arya.cf-app.com:25555
        BOSH_USER: {{arya_bosh_user}}
        BOSH_PASSWORD: {{arya_bosh_password}}
      on_failure:
        put: slack-alert
        params:
          text: '[clean-all-the-boshes] OH NO! Failed to clean old boshes https://capi.ci.cf-app.com/?groups=bosh'
          icon_emoji: {{slack_failure_emoji}}

- name: deploy-xena-datadog-firehose-nozzle
  serial_groups: [deploy-xena-datadog]
  plan:
  - aggregate:
    - get: datadog-firehose-nozzle-release-final
      params:
        tarball: true
      trigger: true
    - get: datadog-firehose-nozzle-release
    - get: aws-stemcell
    - get: capi-ci-private
    - get: capi-ci
  - task: manifest
    file: capi-ci/ci/scripts/create_datadog_firehose_nozzle_manifest.yml
    params:
      ENVIRONMENT: xena
  - put: xena-datadog-firehose-nozzle-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases: [ datadog-firehose-nozzle-release-final/release.tgz]

- name: rc-docs
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-ci-passed
      trigger: true
      params:
        submodules:
          - src/cloud_controller_ng
  - task: push-rc-docs
    file: capi-ci/ci/scripts/push_rc_docs.yml
    params: &docs-aws-account
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: {{docs_s3_access_key}}
      AWS_SECRET_ACCESS_KEY: {{docs_s3_secret_key}}
      GITHUB_PUSH_KEY: {{private_key}}
    on_failure:
      put: slack-alert
      params:
        text: '[rc-docs] OH NO! Failed to update documentation https://capi.ci.cf-app.com/?groups=migrations-dependencies-docs'
        icon_emoji: {{slack_failure_emoji}}

- name: bump-cc-api
  serial: true
  plan:
  - aggregate:
    # we are using version as an input to gate on ship-it using a cheap to get resource
    # it is not actually a necessary input for this job
    - get: version
      passed: [ship-it]
      trigger: true
    - get: cc-api-version
  - put: cc-api-version
    params:
      bump: minor

- name: publish-docs
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-master
      trigger: true
      passed: [ship-it]
      params:
        submodules:
          - src/cloud_controller_ng
  - task: push-docs
    file: capi-ci/ci/scripts/push_docs.yml
    params:
      GITHUB_PUSH_KEY: {{private_key}}
    on_failure:
      put: slack-alert
      params:
        text: '[publish-docs] OH NO! Failed to update documentation https://capi.ci.cf-app.com/?groups=migrations-dependencies-docs'
        icon_emoji: {{slack_failure_emoji}}

- name: update-checkman
  plan:
    - aggregate:
      - get: capi-ci
        trigger: true
      - get: capi-checkman
    - task: update-checkman
      file: capi-ci/ci/scripts/update_checkman.yml
      on_success:
        put: slack-alert
        params:
          text: '[update-checkman] Checkman configuration successfully updated'
          icon_emoji: ':capi:'
      on_failure:
        put: slack-alert
        params:
          text: '[update-checkman] OH NO! There was a problem updating configuration! https://capi.ci.cf-app.com/?groups=migrations-dependencies-docs'
          icon_emoji: {{slack_failure_emoji}}
    - put: capi-checkman
      params:
        repository: updated-capi-checkman
        rebase: true

- name: wait-for-sunday
  plan:
  - aggregate:
    - get: weekly-sunday
      trigger: true
    - get: bosh
    - get: bosh-aws-cpi
    - get: aws-stemcell

- name: freshen-wasabi
  serial: true
  serial_groups: [deploy-wasabi-migrations]
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-ci-private
    - get: bosh
      passed: [wait-for-sunday]
      trigger: true
    - get: bosh-aws-cpi
      passed: [wait-for-sunday]
      trigger: true
    - get: aws-stemcell
      passed: [wait-for-sunday]
      trigger: true
  - task: freshen-wasabi
    file: capi-ci/ci/scripts/freshen_bosh.yml
    params:
      BOSH_INIT_CONFIG_DIR: capi-ci-private/wasabi/deployments/bosh
      BOSH_ENVIRONMENT_NAME: wasabi
    on_failure:
      put: slack-alert
      params:
        text: '[freshen-wasabi] OH NO! Failed to freshen wasabi https://capi.ci.cf-app.com/?groups=bosh'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-ci-private
    params:
      repository: freshened-config/capi-ci-private
      rebase: true

- name: freshen-xena
  serial: true
  serial_groups: [deploy-xena-cf, deploy-xena-diego, deploy-xena-datadog]
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-ci-private
    - get: bosh
      passed: [wait-for-sunday]
      trigger: true
    - get: bosh-aws-cpi
      passed: [wait-for-sunday]
      trigger: true
    - get: aws-stemcell
      passed: [wait-for-sunday]
      trigger: true
  - task: freshen-xena
    file: capi-ci/ci/scripts/freshen_bosh.yml
    params:
      BOSH_INIT_CONFIG_DIR: capi-ci-private/xena/deployments/bosh
      BOSH_ENVIRONMENT_NAME: xena
    on_failure:
      put: slack-alert
      params:
        text: '[freshen-xena] OH NO! Failed to freshen xena https://capi.ci.cf-app.com/?groups=bosh'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-ci-private
    params:
      repository: freshened-config/capi-ci-private
      rebase: true

- name: deliver-stories
  serial: true
  plan:
    - get: capi-release
      resource: capi-release-ci-passed
      trigger: true
    - put: deliver-capi-stories
      params:
        repos:
        - capi-release/src/cloud_controller_ng

- name: merge-capi-release-master
  serial: true
  plan:
  - aggregate:
    - get: capi-release-master
      passed: [ship-it]
      trigger: true
    - get: capi-release
      resource: capi-release-develop
  - task: merge-master-into-develop
    file: capi-ci/ci/scripts/freshen_bosh.yml
  - put: capi-release-develop
    params:
      repository: merged/capi-release

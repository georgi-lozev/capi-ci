groups:
- name: capi-release
  jobs:
  - cc-unit-tests
  - bridge-unit-tests
  - create-capi-release
  - deploy-and-test-mysql-s3-bbs
  - migration-backwards-compatibility-test
  - bump-capi-release
  - deploy-and-test-postgres-webdave-bridge
  - deploy-and-test-mulan
  - deploy-and-test-elsa
  - bump-ci-passed
- name: ship-it
  jobs:
  - ship-it
  - bump-cc-v2-api
  - bump-cc-v3-api
  - push-github-release
  - merge-capi-release-master
  - publish-docs
  - bump-v2-docs
  - bump-cf-release
- name: dependencies-docs
  jobs:
  - check-cc-dependencies
  - rc-docs
  - update-checkman
  - deliver-stories
- name: xena-deployments
  jobs:
  - deploy-xena-datadog-firehose-nozzle
  - deploy-cf-mysql
- name: bosh
  jobs:
  - clean-all-the-boshes
  - freshen-wasabi
  - freshen-xena
  - freshen-arya
  - freshen-buffy
  - freshen-mulan
  - freshen-elsa
- name: mssql
  jobs:
  - freshen-ripley
  - mssql-unit-tests
  - deploy-and-test-ripley

resource_types:
- name: bosh-release
  type: docker-image
  source:
    repository: cloudfoundry/bosh-release-resource
- name: bosh-stemcell
  type: docker-image
  source:
    repository: cloudfoundry/bosh-stemcell-resource
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
- name: bosh2-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:

# schedules
- name: weekly-sunday
  type: time
  source:
    location: America/Los_Angeles
    start: 23:00
    stop: 23:30
    days: [Sunday]

- name: daily
  type: time
  source:
    location: America/Los_Angeles
    start: 23:00
    stop: 23:30

- name: deliver-capi-stories
  type: tracker
  source:
    token: {{deliver_capi_tracker_token}}
    project_id: '966314'
    tracker_url: https://www.pivotaltracker.com

- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: gcp-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: capi-final-releases
  type: s3
  source:
    bucket: capi-final-releases
    regexp: capi-(.*).tgz
    access_key_id: {{wasabi_ci_artifacts_s3_access_key}}
    secret_access_key: {{wasabi_ci_artifacts_s3_secret_key}}

- name: capi-checkman
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-checkman.git

- name: capi-ci
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci.git

- name: capi-ci-private
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git

- name: arya-bbl-state
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git

- name: ripley-integration-configs
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git
    paths: ["ripley/cats_integration_config.json"]

- name: ripley-bbl-state
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git
    paths: ["ripley/bbl-state.json"]

- name: ripley-deployment-vars
  type: gcs
  source:
    bucket: {{ripley_bosh_vars_bucket}}
    json_key: {{ripley_gcp_json_key}}
    versioned_file: &ripley_vars_store_path bosh/vars-store.yml

- name: capi-release-master
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-release.git

- name: capi-release-ci-passed
  type: git
  source:
    branch: ci-passed
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-release.git

- name: capi-release-develop
  type: git
  source:
    branch: develop
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-release.git

- name: capi-release-tarball
  type: s3
  source:
    bucket: capi-releases
    regexp: capi-(.*)-.*-.*.tgz
    access_key_id: {{wasabi_ci_artifacts_s3_access_key}}
    secret_access_key: {{wasabi_ci_artifacts_s3_secret_key}}

- name: version
  type: semver
  source:
    access_key_id: {{wasabi_ci_artifacts_s3_access_key}}
    secret_access_key: {{wasabi_ci_artifacts_s3_secret_key}}
    initial_version: 0.0.0
    bucket: capi-release-versions
    key: current-capi-release-version
    region_name: us-east-1

- name: version-sql-server
  type: semver
  source:
    access_key_id: {{wasabi_ci_artifacts_s3_access_key}}
    secret_access_key: {{wasabi_ci_artifacts_s3_secret_key}}
    initial_version: 1.25.0
    bucket: capi-release-versions
    key: temporary-capi-release-sql-server-version
    region_name: us-east-1

- name: cc-api-v3-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git
    branch: master
    file: config/version
    git_user: 'CAPI CI <cf-capi-eng+ci@pivotal.io>'
    private_key: {{private_key}}

- name: cc-api-v2-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git
    branch: master
    file: config/version_v2
    git_user: 'CAPI CI <cf-capi-eng+ci@pivotal.io>'
    private_key: {{private_key}}

- name: cc-uploader
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cc-uploader.git

- name: cf-release-develop
  type: git
  source:
    branch: develop
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: cf-release-final
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-release

- name: github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: capi-release
    drafts: true
    access_token: {{github_access_token}}

- name: cf-mysql-release
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-mysql-release.git

- name: cf-release-master
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-release.git

- name: cf-release-tarball
  type: s3
  source:
    bucket: cf-runtime-releases
    regexp: cf-(\d+)-.*.tgz
    access_key_id: {{cf_runtime_releases_s3_access_key}}
    secret_access_key: {{cf_runtime_releases_s3_secret_key}}

- name: cf-wasabi-deployment
  type: bosh-deployment
  source:
    target: bosh.wasabi.cf-app.com:25555
    username: {{wasabi_bosh_user}}
    password: {{wasabi_bosh_password}}
    deployment: cf-wasabi
    ignore_ssl: true

- name: cflinuxfs2-rootfs-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release

- name: cloud_controller_ng
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git

- name: cloud_controller_ng_sql_server
  type: git
  source:
    branch: pivotal-sqlserversupport
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git

- name: cloud_controller_ng-master-migrations
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cloud_controller_ng.git
    paths: ['db']

- name: concourse-config
  type: git
  source:
    paths:
    - wasabi
    ignore_paths:
    - wasabi/deployments/pipeline.yml
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git

- name: datadog-firehose-nozzle-release
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry-incubator/datadog-firehose-nozzle-release.git

- name: datadog-firehose-nozzle-release-final
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/datadog-firehose-nozzle-release

- name: diego-ci
  type: git
  source:
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry-incubator/diego-ci

- name: diego-release
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/diego-release.git

- name: diego-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release

- name: cf-mysql-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-mysql-release

- name: garden-runc-release-tarball
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: nsync
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/nsync.git

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack_failure_hook_url}}

- name: stager
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/stager.git

- name: sync-integration-tests
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/sync-integration-tests.git

- name: tps
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/tps.git

- name: buffy-acceptance-tests-logs
  type: s3
  source:
    private: true
    bucket: buffy-acceptance-tests-logs
    regexp: acceptance_tests.(0)..*.tgz
    access_key_id: {{wasabi_ci_artifacts_s3_access_key}}
    secret_access_key: {{wasabi_ci_artifacts_s3_secret_key}}

- name: buffy-deployment
  type: bosh-deployment
  source:
    target: https://bosh.buffy.cf-app.com:25555
    username: {{buffy_bosh_user}}
    password: {{buffy_bosh_password}}
    deployment: cf-buffy
    ignore_ssl: true

- name: buffy-diego-deployment
  type: bosh-deployment
  source:
    target: https://bosh.buffy.cf-app.com:25555
    username: {{buffy_bosh_user}}
    password: {{buffy_bosh_password}}
    deployment: cf-buffy-diego
    ignore_ssl: true

- name: buffy-stemcell-upload
  type: bosh-stemcell
  source:
    target: https://bosh.buffy.cf-app.com:25555
    username: {{buffy_bosh_user}}
    password: {{buffy_bosh_password}}
    ignore_ssl: true

- name: buffy-release-upload
  type: bosh-release
  source:
    target: https://bosh.buffy.cf-app.com:25555
    username: {{buffy_bosh_user}}
    password: {{buffy_bosh_password}}
    ignore_ssl: true

- name: xena-acceptance-tests-logs
  type: s3
  source:
    private: true
    bucket: xena-acceptance-tests-logs
    regexp: acceptance_tests.(0)..*.tgz
    access_key_id: {{wasabi_ci_artifacts_s3_access_key}}
    secret_access_key: {{wasabi_ci_artifacts_s3_secret_key}}

- name: xena-datadog-firehose-nozzle-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: datadog-firehose-nozzle
    ignore_ssl: true

- name: xena-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena
    ignore_ssl: true

- name: xena-mysql-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena-mysql
    ignore_ssl: true

- name: xena-stemcell-upload
  type: bosh-stemcell
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    ignore_ssl: true

- name: xena-release-upload
  type: bosh-release
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    ignore_ssl: true

- name: xena-diego-deployment
  type: bosh-deployment
  source:
    target: https://bosh.xena.cf-app.com:25555
    username: {{xena_bosh_user}}
    password: {{xena_bosh_password}}
    deployment: cf-xena-diego
    ignore_ssl: true

- name: cf-deployment
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: {{private_key}}
    branch: release-candidate

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: "v1.*"

- name: cf-deployment-concourse-tasks-v2
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: "v2.*"

- name: cats-concourse-task
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cats-concourse-task.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git

- name: azure-terraform
  type: terraform
  source:
    storage:
      bucket: capi-ripley-deployments
      bucket_path: azure
      access_key_id: {{gcp_storage_access_key}}
      secret_access_key: {{gcp_storage_secret_key}}
      endpoint: storage.googleapis.com

- name: ripley-deployment
  type: bosh2-deployment
  source:
    vars_store:
      provider: gcs
      config:
        bucket: {{ripley_bosh_vars_bucket}}
        file_name: *ripley_vars_store_path
        json_key: {{ripley_gcp_json_key}}

# Mulan resources
- name: mulan-bbl-state
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git
    paths: ["mulan/bbl-state.json"]

- name: mulan-integration-configs
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git
    paths: ["mulan/cats_integration_config.json"]

- name: mulan-deployment-vars
  type: gcs
  source:
    bucket: {{mulan_bosh_vars_bucket}}
    json_key: {{mulan_gcp_json_key}}
    versioned_file: &mulan_vars_store_path "bosh/vars-store.yml"

- name: mulan-deployment
  type: bosh2-deployment
  source:
    vars_store:
      provider: gcs
      config:
        bucket: {{mulan_bosh_vars_bucket}}
        file_name: *mulan_vars_store_path
        json_key: {{mulan_gcp_json_key}}

# Elsa resources
- name: elsa-bbl-state
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git
    paths: ["elsa/bbl-state.json"]

- name: elsa-integration-configs
  type: git
  source:
    branch: master
    private_key: {{private_key}}
    uri: git@github.com:cloudfoundry/capi-ci-private.git
    paths: ["elsa/cats_integration_config.json"]

- name: elsa-deployment-vars
  type: gcs
  source:
    bucket: {{elsa_bosh_vars_bucket}}
    json_key: {{elsa_gcp_json_key}}
    versioned_file: &elsa_vars_store_path "bosh/vars-store.yml"

- name: elsa-deployment
  type: bosh2-deployment
  source:
    vars_store:
      provider: gcs
      config:
        bucket: {{elsa_bosh_vars_bucket}}
        file_name: *elsa_vars_store_path
        json_key: {{elsa_gcp_json_key}}

- name: elsa-aws-storage-terraform
  type: terraform
  source:
    storage:
      bucket: {{elsa_bosh_vars_bucket}}
      bucket_path: aws-storage
      access_key_id: {{gcp_storage_access_key}}
      secret_access_key: {{gcp_storage_secret_key}}
      endpoint: storage.googleapis.com

- name: elsa-cats-logs-terraform
  type: terraform
  source:
    storage:
      bucket: {{elsa_bosh_vars_bucket}}
      bucket_path: aws-storage-cats-logs
      access_key_id: {{gcp_storage_access_key}}
      secret_access_key: {{gcp_storage_secret_key}}
      endpoint: storage.googleapis.com

- name: elsa-acceptance-tests-logs
  type: s3
  source:
    private: true
    bucket: &elsa-cats-bucket elsa-cf-acceptance-tests-logs
    regexp: acceptance_tests.(0)..*.tgz
    access_key_id: {{xena_aws_access_key}}
    secret_access_key: {{xena_aws_secret_key}}

jobs:

- name: check-cc-dependencies
  serial: true
  plan:
  - aggregate:
    - get: cloud_controller_ng
      trigger: true
    - get: concourse-config
    - get: capi-ci
  - task: check-dependencies
    file: capi-ci/ci/scripts/cloud_controller_ng_dependencies.yml
    params:
      GEMNASIUM_API_KEY: {{gemnasium_api_key}}

- name: cc-unit-tests
  plan:
  - aggregate:
    - get: cloud_controller_ng
      trigger: true
    - get: capi-ci
  - aggregate:
    - task: run-cc-unit-tests-mysql
      file: capi-ci/ci/scripts/run_cc_unit_tests.yml
      params:
        DB: mysql
      on_failure:
        put: slack-alert
        params:
          text: '[cc-unit-tests] OH NO! Failed when running with mysql'
          icon_emoji: {{slack_failure_emoji}}
    - task: run-cc-unit-tests-postgres
      file: capi-ci/ci/scripts/run_cc_unit_tests.yml
      params:
        DB: postgres
      on_failure:
        put: slack-alert
        params:
          text: '[cc-unit-tests] OH NO! Failed when running with postgres'
          icon_emoji: {{slack_failure_emoji}}

- name: bump-capi-release
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-develop
      trigger: true
    - get: cloud_controller_ng-master-migrations
      passed: [migration-backwards-compatibility-test]
      trigger: true
    - get: cloud_controller_ng
      passed: [cc-unit-tests]
      trigger: true
    - get: diego-release
      passed: [bridge-unit-tests]
      params:
        submodules:
        - src/code.cloudfoundry.org/bbs
    - get: cc-uploader
      passed: [bridge-unit-tests]
      trigger: true
    - get: nsync
      passed: [bridge-unit-tests]
      trigger: true
    - get: stager
      passed: [bridge-unit-tests]
      trigger: true
    - get: tps
      passed: [bridge-unit-tests]
      trigger: true
  - task: bump-capi-release
    file: capi-ci/ci/scripts/bump_capi_release_conditionally.yml
  - put: capi-release-develop
    params:
      repository: bumped/capi-release
      rebase: true

- name: bridge-unit-tests
  plan:
  - aggregate:
    - get: capi-release
      resource: capi-release-develop
    - get: cc-uploader
      trigger: true
    - get: nsync
      trigger: true
    - get: stager
      trigger: true
    - get: tps
      trigger: true
    - get: capi-ci
    - get: diego-release
      params:
        submodules:
        - src/code.cloudfoundry.org/bbs
  - task: run-bridge-unit-tests
    file: capi-ci/ci/scripts/run_bridge_unit_tests.yml

- name: create-capi-release
  serial_groups: [version]
  serial: true
  plan:
  - aggregate:
    - get: capi-release
      resource: capi-release-develop
      passed: [bump-capi-release]
      trigger: true
    - get: capi-ci
    - get: version
      resource: version
      params:
        pre: rc
    - get: cloud_controller_ng
  - put: version
    params:
      file: version/version
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to update version'
        icon_emoji: {{slack_failure_emoji}}
  - task: create-release-tarball
    file: capi-ci/ci/scripts/create_capi_release.yml
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to create tarball'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-release-tarball
    params:
      file: created-capi-release/capi-*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[create-capi-release] OH NO! Failed to upload tarball'
        icon_emoji: {{slack_failure_emoji}}

- name: deploy-cf-mysql
  serial: true
  serial_groups: [deploy-xena-cf-mysql]
  plan:
  - aggregate:
    - get: weekly-sunday
      trigger: true
    - get: cf-release
      resource: cf-release-develop
    - get: cf-mysql-release
    - get: cf-mysql-release-tarball
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
  - task: generate-cf-manifest
    privileged: true
    file: capi-ci/ci/scripts/create_cf_deployment_manifest.yml
    params:
      INFRASTRUCTURE: aws
      ENVIRONMENT: xena
  - task: make-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/capi
          tag: runtime-ci
      inputs:
      - name: generated-manifest
        path: cf-manifest
      - name: cf-mysql-release
      - name: capi-ci
      - name: capi-ci-private
      outputs:
      - name: generated-manifest
      params:
        ENV: xena
        BOSH_DIRECTOR: https://bosh.xena.cf-app.com:25555
        BOSH_USER: {{xena_bosh_user}}
        BOSH_PASSWORD: {{xena_bosh_password}}
      run:
        path: capi-ci/ci/scripts/create_cf_mysql_deployment_manifest
  - put: xena-mysql-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases:
        - cf-mysql-release-tarball/*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-cf-mysql] OH NO! Failed deploying cf-mysql-release to xena'
        icon_emoji: {{slack_failure_emoji}}

- name: deploy-and-test-mulan
  serial: true
  serial_groups: [deploy-mulan]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      resource: cf-deployment-concourse-tasks-v2
    - get: cats-concourse-task
    - get: cf-deployment
      resource: cf-deployment
    - get: capi-release
      resource: capi-release-develop
      passed: [create-capi-release]
    - get: mulan-deployment-vars
    - get: mulan-bbl-state
    - get: mulan-integration-configs
    - get: cf-acceptance-tests
    - get: capi-ci
    - get: capi-ci-private
    - get: capi-release-tarball
      passed: [create-capi-release]
      trigger: true
  - task: upload-capi-release-tarball
    file: capi-ci/ci/scripts/upload-release.yml
    input_mapping:
      bbl-state: mulan-bbl-state
      release-tarball: capi-release-tarball
    params:
      BBL_STATE_DIR: "mulan"
  - task: mulan-stemcell-upload
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: mulan-bbl-state
    params:
      BBL_STATE_DIR: "mulan"
  - task: extract-bbl-vars
    file: capi-ci/ci/scripts/extract_bbl_vars.yml
    params:
      ENV_NAME: mulan
  - put: mulan-deployment
    params:
      source_file: bbl-vars/bbl-vars.json
      manifest: cf-deployment/cf-deployment.yml
      vars:
        system_domain: "mulan.cf-app.com"
        prometheus_password: {{prometheus_password}}
      vars_files:
      - bbl-vars/bbl-vars.json # used by prometheus bosh exporter
      ops_files:
      - cf-deployment/operations/test/add-persistent-isolation-segment-diego-cell.yml
      - capi-ci/cf-deployment-operations/skip-cert-verify.yml
      - capi-ci/cf-deployment-operations/use-latest-capi.yml
      - cf-deployment/operations/scale-to-one-az.yml
      - capi-ci/cf-deployment-operations/scale-cells-to-two.yml
      - cf-deployment/operations/use-postgres.yml
      - cf-deployment/operations/experimental/locket.yml
      - cf-deployment/operations/experimental/locket-postgres.yml
      - capi-ci/cf-deployment-operations/add-prometheus.yml
  - task: updated-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      vars-store: mulan-deployment-vars
      integration-configs: mulan-integration-configs
    params:
      CATS_INTEGRATION_CONFIG_FILE: "mulan/cats_integration_config.json"
      VARS_STORE_FILE: "vars-store.yml"
    ensure:
      put: mulan-integration-configs
      params:
        repository: updated-integration-configs
        rebase: true
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    input_mapping:
      vars-store: mulan-deployment-vars
    params:
      SYSTEM_DOMAIN: "mulan.cf-app.com"
      VARS_STORE_FILE: "vars-store.yml"
  - task: acceptance-tests
    file: cats-concourse-task/task.yml
    input_mapping:
      integration-config: mulan-integration-configs
    params:
      NODES: 6
      CONFIG_FILE_PATH: "mulan/cats_integration_config.json"

- name: deploy-and-test-elsa
  serial: true
  serial_groups: [deploy-elsa]
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
      resource: cf-deployment-concourse-tasks-v2
    - get: cats-concourse-task
    - get: cf-deployment
      resource: cf-deployment
    - get: capi-release
      resource: capi-release-develop
      passed: [create-capi-release]
    - get: elsa-deployment-vars
    - get: elsa-bbl-state
    - get: elsa-integration-configs
    - get: cf-acceptance-tests
    - get: sync-integration-tests
    - get: capi-ci
    - get: capi-ci-private
    - get: capi-release-tarball
      passed: [create-capi-release]
      trigger: true
  - task: upload-capi-release-tarball
    file: capi-ci/ci/scripts/upload-release.yml
    input_mapping:
      bbl-state: elsa-bbl-state
      release-tarball: capi-release-tarball
    params:
      BBL_STATE_DIR: "elsa"
  - task: elsa-stemcell-upload
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: elsa-bbl-state
    params:
      BBL_STATE_DIR: "elsa"
  - task: extract-bbl-vars
    file: capi-ci/ci/scripts/extract_bbl_vars.yml
    params:
      ENV_NAME: elsa
  - put: elsa-aws-storage-terraform
    params:
      env_name: elsa
      terraform_source: capi-ci/terraform/aws-s3-buckets/
      vars:
        aws_access_key: {{xena_aws_access_key}}
        aws_secret_key: {{xena_aws_secret_key}}
        cdn_key_pair_id: {{xena_cdn_key_pair_id}}
        cdn_private_key: {{xena_cdn_private_key}}
  - put: elsa-cats-logs-terraform
    params:
      env_name: elsa
      terraform_source: capi-ci/terraform/aws-s3-buckets-for-cats/
      vars:
        aws_access_key: {{xena_aws_access_key}}
        aws_secret_key: {{xena_aws_secret_key}}
        bucket_name: *elsa-cats-bucket
  - put: elsa-deployment
    params:
      source_file: bbl-vars/bbl-vars.json
      manifest: cf-deployment/cf-deployment.yml
      vars:
        system_domain: "elsa.cf-app.com"
      vars_files:
        - elsa-aws-storage-terraform/metadata
      ops_files:
      - cf-deployment/operations/test/add-persistent-isolation-segment-diego-cell.yml
      - capi-ci/cf-deployment-operations/skip-cert-verify.yml
      - capi-ci/cf-deployment-operations/use-latest-capi.yml
      - capi-ci/cf-deployment-operations/bypass-cc-bridge.yml
      - capi-ci/cf-deployment-operations/use-s3-and-cdn-storage.yml
      - capi-ci/cf-deployment-operations/use-clustered-mysql.yml
  - task: updated-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      vars-store: elsa-deployment-vars
      integration-configs: elsa-integration-configs
    params:
      CATS_INTEGRATION_CONFIG_FILE: "elsa/cats_integration_config.json"
      VARS_STORE_FILE: "vars-store.yml"
    ensure:
      put: elsa-integration-configs
      params:
        repository: updated-integration-configs
        rebase: true
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    input_mapping:
      vars-store: elsa-deployment-vars
    params:
      SYSTEM_DOMAIN: "elsa.cf-app.com"
      VARS_STORE_FILE: "vars-store.yml"
  - aggregate:
    - task: acceptance-tests
      file: cats-concourse-task/task.yml
      input_mapping:
        integration-config: elsa-integration-configs
      params:
        NODES: 6
        CONFIG_FILE_PATH: "elsa/cats_integration_config.json"
    - task: sync-integration-tests
      file: sync-integration-tests/concourse/task_with_vars_store.yml
      input_mapping:
        environment: capi-ci-private
        vars-store: elsa-deployment-vars
      params:
        BOSH_DEPLOYMENT_NAME: cf
        BOSH_API_INSTANCE: api/0
        CF_API_TARGET: https://api.elsa.cf-app.com
        CF_SKIP_SSL_VALIDATION: true
        CF_APPS_DOMAIN: elsa.cf-app.com
        BBL_STATE_DIR: elsa
        VARS_STORE_PATH: "vars-store.yml"
        USE_CF_DEPLOYMENT_VARS: "true"

- name: deploy-and-test-mysql-s3-bbs
  serial: true
  serial_groups: [deploy-xena-cf]
  plan:
  - aggregate:
    - get: cf-release-tarball
    - get: capi-release-tarball
      passed: [create-capi-release]
      trigger: true
    - get: capi-release
      resource: capi-release-develop
      passed: [create-capi-release]
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
    - get: cf-release
      resource: cf-release-develop
    - get: diego-ci
    - get: diego-release
      params:
        submodules: none
    - get: garden-runc-release-tarball
    - get: diego-release-tarball
      trigger: true
    - get: cflinuxfs2-rootfs-tarball
    - get: sync-integration-tests
  - task: cf-manifest
    privileged: true
    file: capi-ci/ci/scripts/create_cf_deployment_manifest.yml
    params:
      INFRASTRUCTURE: aws
      ENVIRONMENT: xena
  - task: diego-manifest
    file: capi-ci/ci/scripts/create_diego_release_manifest.yml
    params:
      BOSH_TARGET: bosh.xena.cf-app.com
      BOSH_USER: {{xena_bosh_user}}
      BOSH_PASSWORD: {{xena_bosh_password}}
      DEPLOYMENTS_DIR: capi-ci-private
      ENVIRONMENT_NAME: xena
      INCLUDE_BRIDGE: false
  - aggregate:
    - put: xena-stemcell-upload
      params:
        stemcells:
          - aws-stemcell/*.tgz
    - put: upload-cf-release-tarball
      resource: xena-release-upload
      params:
        releases:
          - cf-release-tarball/*.tgz
    - put: upload-release-tarballs
      resource: xena-release-upload
      params:
        releases:
          - capi-release-tarball/*.tgz
          - diego-release-tarball/*.tgz
          - garden-runc-release-tarball/*.tgz
          - cflinuxfs2-rootfs-tarball/*.tgz
  - put: xena-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases:
        - cf-release-tarball/*.tgz
        - capi-release-tarball/*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-mysql-s3-bbs] OH NO! Failed deploying cf-release to xena'
        icon_emoji: {{slack_failure_emoji}}
  - put: xena-diego-deployment
    params:
      manifest: generated-diego-manifest/diego-deployment.yml
      releases:
        - diego-release-tarball/*.tgz
        - garden-runc-release-tarball/*.tgz
        - cflinuxfs2-rootfs-tarball/*.tgz
      stemcells: [aws-stemcell/*.tgz]
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-mysql-s3-bbs] OH NO! Failed deploying diego to xena'
        icon_emoji: {{slack_failure_emoji}}
  - task: enable-feature-flags
    file: capi-ci/ci/scripts/enable_feature_flags.yml
    params:
      CF_API_TARGET: https://api.xena.cf-app.com
      CF_ADMIN_PASSWORD: {{xena_cf_admin_password}}
  - aggregate:
    - task: acceptance-tests
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_command.yml
      input_mapping: {manifest: generated-manifest}
      params:
        <<: *bosh-target-xena
        DEPLOYMENT_YML: manifest/deployment.yml
        COMMAND: 'run errand acceptance_tests --keep-alive --download-logs --logs-dir bosh-logs'
      ensure:
        put: xena-acceptance-tests-logs
        params:
          file: bosh-logs/acceptance_tests*.tgz
    - task: sync-integration-tests
      file: sync-integration-tests/concourse/task.yml
      input_mapping: {environment: capi-ci-private}
      params:
        BOSH_DEPLOYMENT_NAME: cf-xena
        BOSH_API_INSTANCE: api_z1/0
        CF_API_TARGET: https://api.xena.cf-app.com
        CF_ADMIN_PASSWORD: {{xena_cf_admin_password}}
        CF_SKIP_SSL_VALIDATION: true
        CF_APPS_DOMAIN: xena-app.cf-app.com
        BBL_STATE_DIR: xena
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-mysql-s3-bbs] OH NO! Failed on acceptance-tests'
        icon_emoji: {{slack_failure_emoji}}

- name: deploy-and-test-postgres-webdave-bridge
  serial: true
  serial_groups: [deploy-buffy-cf]
  plan:
  - aggregate:
    - get: cf-release-tarball
    - get: capi-release-tarball
      passed: [create-capi-release]
      trigger: true
    - get: capi-release
      resource: capi-release-develop
      passed: [create-capi-release]
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
    - get: cf-release
      resource: cf-release-develop
    - get: diego-ci
    - get: diego-release
      params:
        submodules: none
    - get: garden-runc-release-tarball
    - get: diego-release-tarball
      trigger: true
    - get: cflinuxfs2-rootfs-tarball
    - get: sync-integration-tests
  - task: cf-manifest
    privileged: true
    file: capi-ci/ci/scripts/create_cf_deployment_manifest.yml
    params:
      INFRASTRUCTURE: aws
      ENVIRONMENT: buffy
  - task: diego-manifest
    file: capi-ci/ci/scripts/create_diego_release_manifest.yml
    params:
      BOSH_TARGET: bosh.buffy.cf-app.com
      BOSH_USER: {{buffy_bosh_user}}
      BOSH_PASSWORD: {{buffy_bosh_password}}
      DEPLOYMENTS_DIR: capi-ci-private
      ENVIRONMENT_NAME: buffy
      INCLUDE_BRIDGE: true
  - aggregate:
    - put: buffy-stemcell-upload
      params:
        stemcells:
          - aws-stemcell/*.tgz
    - put: upload-cf-release-tarball
      resource: buffy-release-upload
      params:
        releases:
          - cf-release-tarball/*.tgz
    - put: upload-release-tarballs
      resource: buffy-release-upload
      params:
        releases:
          - capi-release-tarball/*.tgz
          - diego-release-tarball/*.tgz
          - garden-runc-release-tarball/*.tgz
          - cflinuxfs2-rootfs-tarball/*.tgz
  - put: buffy-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases:
        - cf-release-tarball/*.tgz
        - capi-release-tarball/*.tgz
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-postgres-webdave-bridge] OH NO! Failed deploying cf-release to buffy'
        icon_emoji: {{slack_failure_emoji}}
  - put: buffy-diego-deployment
    params:
      manifest: generated-diego-manifest/diego-deployment.yml
      releases:
        - diego-release-tarball/*.tgz
        - garden-runc-release-tarball/*.tgz
        - cflinuxfs2-rootfs-tarball/*.tgz
      stemcells: [aws-stemcell/*.tgz]
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-postgres-webdave-bridge] OH NO! Failed deploying diego to buffy'
        icon_emoji: {{slack_failure_emoji}}
  - task: enable-feature-flags
    file: capi-ci/ci/scripts/enable_feature_flags.yml
    params:
      CF_API_TARGET: https://api.buffy.cf-app.com
      CF_ADMIN_PASSWORD: {{buffy_cf_admin_password}}
  - aggregate:
    - task: acceptance-tests
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_command.yml
      input_mapping: {manifest: generated-manifest}
      params:
        <<: *bosh-target-buffy
        DEPLOYMENT_YML: manifest/deployment.yml
        COMMAND: 'run errand acceptance_tests --keep-alive --download-logs --logs-dir bosh-logs'
      ensure:
        put: buffy-acceptance-tests-logs
        params:
          file: bosh-logs/acceptance_tests*.tgz
    - task: sync-integration-tests
      file: sync-integration-tests/concourse/task.yml
      input_mapping: {environment: capi-ci-private}
      params:
        BOSH_DEPLOYMENT_NAME: cf-buffy
        BOSH_API_INSTANCE: api_z1/0
        CF_API_TARGET: https://api.buffy.cf-app.com
        CF_ADMIN_PASSWORD: {{buffy_cf_admin_password}}
        CF_SKIP_SSL_VALIDATION: true
        CF_APPS_DOMAIN: buffy-app.cf-app.com
        BBL_STATE_DIR: buffy
    on_failure:
      put: slack-alert
      params:
        text: '[deploy-and-test-postgres-webdave-bridge] OH NO! Failed on acceptance-tests'
        icon_emoji: {{slack_failure_emoji}}

- name: ship-it
  serial_groups: [version]
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-ci-private
    - get: capi-release
      resource: capi-release-ci-passed
      passed: [bump-ci-passed]
    - get: capi-release-tarball
      passed: [bump-ci-passed]
    - get: version
      params: {bump: final}
  - put: version
    params: {file: version/version}
  - task: finalize-release
    file: capi-ci/ci/scripts/finalize-release.yml
  - put: capi-final-releases
    params:
      file: finalized-release/capi-*.tgz
  - put: capi-release
    resource: capi-release-master
    params:
      repository: finalized-release/capi-release
      tag: version/version
  - put: version
    params:
      bump: minor
  - task: block
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Way to go, Zach!"]

- name: push-github-release
  serial_groups: [version]
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-master
      passed: [ship-it]
    - get: capi-final-releases
      passed: [ship-it]
      trigger: true
  - task: generate-github-release
    file: capi-ci/ci/scripts/generate_github_release.yml
  - put: github-release
    params:
      commitish: generated-release/commitish
      name: generated-release/name
      tag: generated-release/version
      globs:
      - generated-release/*.tgz

- name: bump-cf-release
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-master
      trigger: true
      passed: [ship-it]
    - get: cf-release
      resource: cf-release-develop
      params:
        submodules:
        - src/capi-release
  - task: bump-cf-release
    file: capi-ci/ci/scripts/bump_cf_release.yml
  - put: cf-release-develop
    params:
      repository: bumped/cf-release
      rebase: true

- name: migration-backwards-compatibility-test
  serial: true
  serial_groups: [deploy-wasabi-migrations]
  plan:
  - aggregate:
    - get: cf-release-final
      params:
        tarball: true
    - get: cf-release
      resource: cf-release-master
      trigger: true
    - get: capi-ci
    - get: capi-ci-private
    - get: aws-stemcell
      version:
        version: "3363.15" # new stemcell versions break dea support
    - get: cloud_controller_ng
      resource: cloud_controller_ng-master-migrations
      trigger: true
  - task: manifest
    privileged: true
    file: capi-ci/ci/scripts/create_cf_deployment_manifest.yml
    params:
      INFRASTRUCTURE: aws
      ENVIRONMENT: wasabi
  - task: delete-wasabi-deployment
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'delete deployment cf-wasabi'
  - put: cf-wasabi-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases: [ cf-release-final/release.tgz]
  - task: smoke-tests
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'run errand smoke_tests --keep-alive'
  - task: apply-migrations
    privileged: true
    file: capi-ci/ci/scripts/apply_cc_migrations.yml
    params:
      CONNECTION_STRING: {{cc_db_connection_string}}
      ENVIRONMENT: wasabi
      DB_HOST: 10.0.30.30
      TUNNEL_HOST: bosh.wasabi.cf-app.com
  - task: acceptance-tests
    privileged: true
    file: capi-ci/ci/scripts/run_bosh_command.yml
    input_mapping: {manifest: generated-manifest}
    params:
      <<: *bosh-target-wasabi
      DEPLOYMENT_YML: manifest/deployment.yml
      COMMAND: 'run errand acceptance_tests --keep-alive --download-logs --logs-dir bosh-logs'
    on_success:
      task: cleanup-wasabi-deployment
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_command.yml
      input_mapping: {manifest: generated-manifest}
      params:
        <<: *bosh-target-wasabi
        DEPLOYMENT_YML: manifest/deployment.yml
        COMMAND: 'delete deployment cf-wasabi'

- name: clean-all-the-boshes
  plan:
  - aggregate:
    - get: capi-ci
    - get: daily
      trigger: true
  - aggregate:
    - task: cleanup-ci
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-ci
        BOSH_DIRECTOR: https://bosh.capi.ci.cf-app.com:25555
        BOSH_USER: {{ci_bosh_user}}
        BOSH_PASSWORD: {{ci_bosh_password}}
    - task: cleanup-wasabi
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-wasabi
        BOSH_DIRECTOR: https://bosh.wasabi.cf-app.com:25555
        BOSH_USER: {{wasabi_bosh_user}}
        BOSH_PASSWORD: {{wasabi_bosh_password}}
    - task: cleanup-xena
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-xena
        BOSH_DIRECTOR: https://bosh.xena.cf-app.com:25555
        BOSH_USER: {{xena_bosh_user}}
        BOSH_PASSWORD: {{xena_bosh_password}}
    - task: cleanup-buffy
      privileged: true
      file: capi-ci/ci/scripts/run_bosh_cleanup.yml
      params: &bosh-target-buffy
        BOSH_DIRECTOR: https://bosh.buffy.cf-app.com:25555
        BOSH_USER: {{buffy_bosh_user}}
        BOSH_PASSWORD: {{buffy_bosh_password}}
    on_failure:
      put: slack-alert
      params:
        text: '[clean-all-the-boshes] OH NO! Failed to clean old boshes https://capi.ci.cf-app.com/?groups=bosh'
        icon_emoji: {{slack_failure_emoji}}

- name: deploy-xena-datadog-firehose-nozzle
  serial_groups: [deploy-xena-datadog]
  plan:
  - aggregate:
    - get: datadog-firehose-nozzle-release-final
      params:
        tarball: true
      trigger: true
    - get: datadog-firehose-nozzle-release
    - get: aws-stemcell
    - get: capi-ci-private
    - get: capi-ci
  - task: manifest
    file: capi-ci/ci/scripts/create_datadog_firehose_nozzle_manifest.yml
    params:
      ENVIRONMENT: xena
  - put: xena-datadog-firehose-nozzle-deployment
    params:
      manifest: generated-manifest/deployment.yml
      stemcells: [aws-stemcell/*.tgz]
      releases: [ datadog-firehose-nozzle-release-final/release.tgz]

- name: rc-docs
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-ci-passed
      trigger: true
      params:
        submodules:
          - src/cloud_controller_ng
  - task: push-rc-docs
    file: capi-ci/ci/scripts/push_rc_docs.yml
    params: &docs-aws-account
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: {{docs_s3_access_key}}
      AWS_SECRET_ACCESS_KEY: {{docs_s3_secret_key}}
      GITHUB_PUSH_KEY: {{private_key}}
    on_failure:
      put: slack-alert
      params:
        text: '[rc-docs] OH NO! Failed to update documentation https://capi.ci.cf-app.com/?groups=migrations-dependencies-docs'
        icon_emoji: {{slack_failure_emoji}}

- name: bump-cc-v3-api
  serial: true
  plan:
  - aggregate:
    # we are using version as an input to gate on ship-it using a cheap to get resource
    # it is not actually a necessary input for this job
    - get: version
      passed: [ship-it]
      trigger: true
    - get: cc-api-v3-version
  - put: cc-api-v3-version
    params:
      bump: minor

- name: bump-cc-v2-api
  serial: true
  plan:
  - aggregate:
    # we are using version as an input to gate on ship-it using a cheap to get resource
    # it is not actually a necessary input for this job
    - get: version
      passed: [ship-it]
      trigger: true
    - get: cc-api-v2-version
  - put: cc-api-v2-version
    params:
      bump: minor

- name: bump-v2-docs
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: cc-api-v2-version
      trigger: true
      passed: [bump-cc-v2-api]
    - get: cloud_controller_ng
  - task: bump-v2-docs
    file: capi-ci/ci/scripts/bump_v2_docs_api_version.yml
  - put: cloud_controller_ng
    params:
      repository: cloud_controller_ng_bumped_docs/cloud_controller_ng
      rebase: true

- name: publish-docs
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release
      resource: capi-release-master
      trigger: true
      passed: [ship-it]
      params:
        submodules:
          - src/cloud_controller_ng
  - task: push-docs
    file: capi-ci/ci/scripts/push_docs.yml
    params:
      GITHUB_PUSH_KEY: {{private_key}}
    on_failure:
      put: slack-alert
      params:
        text: '[publish-docs] OH NO! Failed to update documentation https://capi.ci.cf-app.com/?groups=migrations-dependencies-docs'
        icon_emoji: {{slack_failure_emoji}}

- name: update-checkman
  plan:
    - aggregate:
      - get: capi-ci
        trigger: true
      - get: capi-checkman
    - task: update-checkman
      file: capi-ci/ci/scripts/update_checkman.yml
      on_success:
        put: slack-alert
        params:
          text: '[update-checkman] Checkman configuration successfully updated'
          icon_emoji: ':capi:'
      on_failure:
        put: slack-alert
        params:
          text: '[update-checkman] OH NO! There was a problem updating configuration! https://capi.ci.cf-app.com/?groups=migrations-dependencies-docs'
          icon_emoji: {{slack_failure_emoji}}
    - put: capi-checkman
      params:
        repository: updated-capi-checkman
        rebase: true

- name: freshen-wasabi
  serial: true
  serial_groups: [deploy-wasabi-migrations]
  plan:
  - aggregate:
    - get: capi-ci
    - get: env-repo
      resource: capi-ci-private
    - get: weekly-sunday
      trigger: true
  - task: freshen-wasabi
    file: capi-ci/ci/scripts/freshen_bosh.yml
    params:
      BBL_DIR: wasabi
    on_failure:
      put: slack-alert
      params:
        text: '[freshen-wasabi] OH NO! Failed to freshen wasabi https://capi.ci.cf-app.com/?groups=bosh'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-ci-private
    params:
      repository: updated-env-repo
      rebase: true

- name: freshen-arya
  serial: true
  plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        resource: cf-deployment-concourse-tasks-v2
      - get: arya-bbl-state
      - get: capi-ci
      - get: weekly-sunday
    - task: freshen-arya
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      input_mapping:
        bbl-state: arya-bbl-state
      params:
        BBL_STATE_DIR: "arya"
        BBL_IAAS: "gcp"
        BBL_LB_CERT: {{arya_bbl_lb_cert}}
        BBL_LB_KEY: {{arya_bbl_lb_key}}
        LB_DOMAIN: "arya.cf-app.com"
        BBL_ENV_NAME: "arya"
        BBL_GCP_SERVICE_ACCOUNT_KEY: "google_account_creds.json"
        BBL_GCP_PROJECT_ID: {{arya_gcp_project_id}}
        BBL_GCP_ZONE: {{arya_gcp_zone}}
        BBL_GCP_REGION: {{arya_gcp_region}}
      ensure:
        put: arya-bbl-state
        params:
          repository: updated-bbl-state
          rebase: true
    - task: run-bosh-cleanup
      file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
      input_mapping:
        bbl-state: arya-bbl-state
      params:
        BBL_STATE_DIR: "arya"

- name: freshen-xena
  serial: true
  serial_groups: [deploy-xena-cf, deploy-xena-diego, deploy-xena-datadog, deploy-xena-cf-mysql]
  plan:
  - aggregate:
    - get: capi-ci
    - get: env-repo
      resource: capi-ci-private
    - get: weekly-sunday
      trigger: true
  - task: freshen-xena
    file: capi-ci/ci/scripts/freshen_bosh.yml
    params:
      BBL_DIR: xena
    on_failure:
      put: slack-alert
      params:
        text: '[freshen-xena] OH NO! Failed to freshen xena https://capi.ci.cf-app.com/?groups=bosh'
        icon_emoji: {{slack_failure_emoji}}
    ensure:
      put: capi-ci-private
      params:
        repository: updated-env-repo
        rebase: true

- name: freshen-mulan
  serial: true
  serial_groups: [deploy-mulan]
  plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        resource: cf-deployment-concourse-tasks-v2
      - get: mulan-bbl-state
      - get: capi-ci
      - get: weekly-sunday
    - task: freshen-mulan
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      input_mapping:
        bbl-state: mulan-bbl-state
      params:
        BBL_STATE_DIR: "mulan"
        BBL_IAAS: "gcp"
        BBL_LB_CERT: {{mulan_bbl_lb_cert}}
        BBL_LB_KEY: {{mulan_bbl_lb_key}}
        LB_DOMAIN: "mulan.cf-app.com"
        BBL_ENV_NAME: "mulan"
        BBL_GCP_SERVICE_ACCOUNT_KEY: "google_account_creds.json"
        BBL_GCP_PROJECT_ID: {{mulan_gcp_project_id}}
        BBL_GCP_ZONE: {{mulan_gcp_zone}}
        BBL_GCP_REGION: {{mulan_gcp_region}}
      ensure:
        put: mulan-bbl-state
        params:
          repository: updated-bbl-state
          rebase: true
    - task: run-bosh-cleanup
      file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
      input_mapping:
        bbl-state: mulan-bbl-state
      params:
        BBL_STATE_DIR: "mulan"

- name: freshen-elsa
  serial: true
  serial_groups: [deploy-elsa]
  plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
        resource: cf-deployment-concourse-tasks-v2
      - get: elsa-bbl-state
      - get: capi-ci
      - get: weekly-sunday
        trigger: true
    - task: freshen-elsa
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      input_mapping:
        bbl-state: elsa-bbl-state
      params:
        BBL_STATE_DIR: "elsa"
        BBL_IAAS: "gcp"
        BBL_LB_CERT: {{elsa_bbl_lb_cert}}
        BBL_LB_KEY: {{elsa_bbl_lb_key}}
        LB_DOMAIN: "elsa.cf-app.com"
        BBL_ENV_NAME: "elsa"
        BBL_GCP_SERVICE_ACCOUNT_KEY: "google_account_creds.json"
        BBL_GCP_PROJECT_ID: {{elsa_gcp_project_id}}
        BBL_GCP_ZONE: {{elsa_gcp_zone}}
        BBL_GCP_REGION: {{elsa_gcp_region}}
      ensure:
        put: elsa-bbl-state
        params:
          repository: updated-bbl-state
          rebase: true
    - task: run-bosh-cleanup
      file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
      input_mapping:
        bbl-state: elsa-bbl-state
      params:
        BBL_STATE_DIR: "elsa"

- name: freshen-ripley
  serial: true
  serial_groups: [deploy-ripley]
  plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: ripley-bbl-state
      - get: capi-ci
      - get: weekly-sunday
    - task: freshen-ripley
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      input_mapping:
        bbl-state: ripley-bbl-state
      params:
        BBL_STATE_DIR: "ripley"
        BBL_IAAS: "gcp"
        BBL_LB_CERT: {{ripley_bbl_lb_cert}}
        BBL_LB_KEY: {{ripley_bbl_lb_key}}
        LB_DOMAIN: "ripley.cf-app.com"
        BBL_ENV_NAME: "ripley"
        BBL_GCP_SERVICE_ACCOUNT_KEY: "google_account_creds.json"
        BBL_GCP_PROJECT_ID: {{ripley_gcp_project_id}}
        BBL_GCP_ZONE: {{ripley_gcp_zone}}
        BBL_GCP_REGION: {{ripley_gcp_region}}
      ensure:
        put: ripley-bbl-state
        params:
          repository: updated-bbl-state
          rebase: true
    - task: run-bosh-cleanup
      file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
      input_mapping:
        bbl-state: ripley-bbl-state
      params:
        BBL_STATE_DIR: "ripley"

- name: freshen-buffy
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: env-repo
      resource: capi-ci-private
    - get: weekly-sunday
      trigger: true
  - task: freshen-buffy
    file: capi-ci/ci/scripts/freshen_bosh.yml
    params:
      BBL_DIR: buffy
    on_failure:
      put: slack-alert
      params:
        text: '[freshen-buffy] OH NO! Failed to freshen arya https://capi.ci.cf-app.com/?groups=bosh'
        icon_emoji: {{slack_failure_emoji}}
  - put: capi-ci-private
    params:
      repository: updated-env-repo
      rebase: true

- name: deliver-stories
  serial: true
  plan:
    - get: capi-release
      resource: capi-release-ci-passed
      trigger: true
    - put: deliver-capi-stories
      params:
        repos:
        - capi-release/src/cloud_controller_ng
        - capi-release/src/code.cloudfoundry.org/tps
        - capi-release/src/code.cloudfoundry.org/nsync
        - capi-release/src/code.cloudfoundry.org/stager
        - capi-release

- name: merge-capi-release-master
  serial: true
  plan:
  - aggregate:
    - get: capi-ci
    - get: capi-release-master
      passed: [ship-it]
      trigger: true
    - get: capi-release
      resource: capi-release-develop
  - task: merge-master-into-develop
    file: capi-ci/ci/scripts/merge_master_into_develop.yml
  - put: capi-release-develop
    params:
      repository: merged/capi-release

- name: bump-ci-passed
  serial: true
  plan:
  - get: capi-release
    resource: capi-release-develop
    passed:
      - deploy-and-test-elsa
      - deploy-and-test-mulan
    trigger: true
  - get: capi-release-tarball
    passed:
      - deploy-and-test-elsa
      - deploy-and-test-mulan
  - put: capi-release-ci-passed
    params:
      repository: capi-release

- name: mssql-unit-tests
  plan:
  - aggregate:
    - get: cloud_controller_ng
      resource: cloud_controller_ng_sql_server
      trigger: true
    - get: capi-ci
  - task: run-cc-unit-tests-mssql
    privileged: true # required to run mssql in nested docker container
    file: capi-ci/ci/scripts/run_cc_unit_tests.yml
    params:
      DB: mssql

- name: deploy-and-test-ripley
  serial: true
  plan:
  - aggregate:
    - get: cloud_controller_ng
      resource: cloud_controller_ng_sql_server
      trigger: true
      passed:
      - mssql-unit-tests
    - get: capi-ci
    - get: capi-ci-private
    - get: gcp-stemcell
    - get: cf-deployment
    - get: capi-release
      resource: capi-release-develop
    - get: version
      resource: version-sql-server
      params:
        pre: rc
    - get: ripley-deployment-vars
    - get: ripley-integration-configs
    - get: cf-deployment-concourse-tasks
    - get: cats-concourse-task
    - get: cf-acceptance-tests
  - put: version
    resource: version-sql-server
    params:
      file: version/version
  - task: create-release-tarball
    file: capi-ci/ci/scripts/create_capi_release.yml
    params:
      CC_BRANCH: pivotal-sqlserversupport
  - put: azure-terraform
    params:
      env_name: leia
      terraform_source: capi-ci/terraform/azure-ms-sql/
      vars:
        subscription_id: {{azure_subscription_id}}
        client_id: {{azure_client_id}}
        client_secret: {{azure_client_secret}}
        tenant_id: {{azure_tenant_id}}
        resource_group: {{azure_resource_group}}
        db_name: {{azure_db_name}}
        db_admin_user: {{azure_db_admin_user}}
        db_admin_password: {{azure_db_admin_password}}
  - task: extract-bbl-vars
    file: capi-ci/ci/scripts/extract_bbl_vars.yml
    params:
      ENV_NAME: ripley
  - put: ripley-deployment
    params:
      source_file: bbl-vars/bbl-vars.json
      manifest: cf-deployment/cf-deployment.yml
      stemcells:
      - gcp-stemcell/stemcell.tgz
      releases:
      - created-capi-release/*.tgz
      vars:
        system_domain: ripley.cf-app.com
      vars_files:
      - azure-terraform/metadata
      ops_files:
      - cf-deployment/operations/scale-to-one-az.yml
      - cf-deployment/operations/use-postgres.yml
      - capi-ci/cf-deployment-operations/use-ms-sql-azure.yml
      - capi-ci/cf-deployment-operations/skip-cert-verify.yml
      - capi-ci/cf-deployment-operations/use-latest-capi.yml
  - task: updated-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      vars-store: ripley-deployment-vars
      integration-configs: ripley-integration-configs
    params:
      CATS_INTEGRATION_CONFIG_FILE: "ripley/cats_integration_config.json"
      VARS_STORE_FILE: "vars-store.yml"
    ensure:
      put: ripley-integration-configs
      params:
        repository: updated-integration-configs
        rebase: true
  - task: enable-feature-flags
    file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
    input_mapping:
      vars-store: ripley-deployment-vars
    params:
      SYSTEM_DOMAIN: "ripley.cf-app.com"
      VARS_STORE_FILE: "vars-store.yml"
  - task: acceptance-tests
    file: cats-concourse-task/task.yml
    input_mapping:
      integration-config: ripley-integration-configs
    params:
      NODES: 6
      CONFIG_FILE_PATH: "ripley/cats_integration_config.json"
